
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------
mysql
SHOW VARIABLES LIKE "%version%";

https://www.liquidweb.com/kb/mysql-performance-identifying-long-queries/
mysqladmin proc stat

#If you just want to check if it is stalled you can query - and see what is being executed.
show processlist;

https://www.liquidweb.com/kb/mysql-optimization-how-to-leverage-mysql-database-indexing/
SHOW INDEX FROM tableName;



-----------------------------------------------------------------------------------

Replication with Global Transaction Identifiers
https://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html

Semisynchronous Replication
https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html


----------------------------------------------------------------------
https://dev.mysql.com/doc/refman/5.7/en/faqs-replication.html

SHOW MASTER STATUS;
SHOW SLAVE STATUS, Check the Seconds_Behind_Master column in the output from SHOW SLAVE STATUS.
SHOW PROCESSLIST, the number of seconds displayed for the slave SQL thread is the number of seconds between the timestamp of the last replicated event and the real time of the slave machine. 

FLUSH TABLES WITH READ LOCK;
SELECT MASTER_POS_WAIT('log_name', log_pos);
UNLOCK TABLES;

mysql> SHOW VARIABLES LIKE 'binlog_format';   -- whether a master server is using statement-based or row-based binary logging format?

----------------------------------------------------------------------

High-availability solutions (with automatic failover) require active monitoring and either custom scripts or third party tools to provide the failover support from the original MySQL server to the slave.
To handle the process manually, you should be able to switch from a failed master to a pre-configured slave by altering your application to talk to the new server or by adjusting the DNS for the MySQL server from the failed server to the new server.


----------------------------------------------------------------------

https://www.rmurph.com/post/configuring-mysql-master-slave-replication-in-windows
Configuring MySQL Master/Slave Replication in Windows

https://www.opsdash.com/blog/mysql-replication-howto.html
How to Setup MySQL 5.7 Replication with Monitoring on Ubuntu 16.04


For a guide to setting up two or more servers for replication using binary log file positions, Section 16.1.2, “Setting Up Binary Log File Position Based Replication”, deals with the configuration of the servers and provides methods for copying data between the master and slaves.
For a guide to setting up two or more servers for replication using GTID transactions, Section 16.1.3, “Replication with Global Transaction Identifiers”, deals with the configuration of the servers.
https://dev.mysql.com/doc/refman/5.7/en/replication-howto-masterbaseconfig.html
https://www.gigenet.com/blog/basic-mysql-replication-setup-using-binary-log-file-position/

-----------------------------------------------------------------------------------
https://dev.mysql.com/doc/refman/5.7/en/replication-howto-masterstatus.html
Record the Master binary log position for slave configuration
Obtaining the Replication Master Binary Log Coordinates
mysql> FLUSH TABLES WITH READ LOCK;
mysql> SHOW MASTER STATUS;
mysql> UNLOCK TABLES;

-----------------------------------------------------------------------------------
https://dev.mysql.com/doc/refman/5.7/en/replication-snapshot-method.html

https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html
Creating a Data Snapshot Using mysqldump
shell> mysqldump --all-databases --master-data > dbdump.db
https://www.digitalocean.com/community/tutorials/how-to-import-and-export-databases-in-mysql-or-mariadb

-----------------------------------------------------------------------------------

https://dev.mysql.com/doc/refman/5.7/en/replication-setup-slaves.html
Setting the Master Configuration on the Slave
mysql> CHANGE MASTER TO
    ->     MASTER_HOST='master_host_name',
    ->     MASTER_USER='replication_user_name',
    ->     MASTER_PASSWORD='replication_password',
    ->     MASTER_LOG_FILE='recorded_log_file_name',
    ->     MASTER_LOG_POS=recorded_log_position;
	
-----------------------------------------------------------------------------------
mysql> SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1;
mysql> STOP SLAVE;
mysql> START SLAVE;


-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------
https://dev.mysql.com/doc/refman/8.0/en/optimization.html
Optimization


mysql> EXPLAIN FORMAT=TREE
    -> SELECT * FROM t1
    ->     JOIN t2 ON (t1.c1 = t2.c1)
    ->     JOIN t3 ON (t2.c1 < t3.c1)\G


    
-------------------------------------------------------------------------------------


https://www.mysqltutorial.org/getting-started-with-mysql/connect-to-mysql-server/

To connect to the MySQL Server, you use this command:
shell>mysql -u root -p
-u root means that you connect to the MySQL Server using the user account root.
-p instructs mysql to prompt for a password.
You type the password for the user account root and press Enter:
Enter password: ********

mysql> show databases;
mysql> USE database_name;

shell> mysql -u root -D classicmodels -p
mysql> select database();

mysql> system clear;

Show all tables in a current database.
SHOW TABLES;

https://www.mysqltutorial.org/mysql-cheat-sheet.aspx

Connect to MySQL Using MySQL Workbench



-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------
